{"version":3,"sources":["Components/Home.js","Components/CollectClinicals.js","Components/AddPatient.js","Components/AnalyzeData.js","Components/ChartGenerator.js","App.js","serviceWorker.js","index.js"],"names":["tableStyle","width","Home","state","patientData","axios","get","then","res","data","setState","class","align","style","this","map","patient","item","to","React","Component","RowCreater","props","id","firstName","lastName","age","toast","configure","Style","CollectClinicals","match","params","patientId","event","preventDefault","Clinical","componentName","compoName","componentValue","compoValue","post","autoClose","position","POSITION","BOTTOM_CENTER","onChange","target","value","hidden","type","placeholder","name","onClick","addClinicalData","bind","divStyle","AddPatient","fName","lName","pAge","addPatientDetails","AnalyzeData","clinicalData","eachEntry","TableCreater","ChartGenerator","chartData","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","options","title","display","text","fontSize","legend","App","className","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8ca148d4.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst tableStyle = {\r\n    width: '750px'\r\n  };\r\nclass Home extends React.Component{\r\n\r\n    state = {\r\n        patientData:[]\r\n    }\r\n    \r\n\r\n    componentDidMount(){\r\n        axios.get(\"http://localhost:8080/ClinicalAPI/api/patient\").then(res=>{\r\n            const patientData = res.data;\r\n            this.setState({patientData})\r\n        })\r\n    }\r\n        \r\n    render(){\r\n        return(\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n                \r\n                    <table class=\"table table-hover\" align=\"center\" style={tableStyle}>\r\n                        <thead>\r\n                            <tr>\r\n                                <td><b>id</b></td>\r\n                                <td><b>First Name</b></td>\r\n                                <td><b>Last Name</b></td>\r\n                                <td><b>Age</b></td>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                                {this.state.patientData.map((patient) => <RowCreater item={patient} />)}\r\n                        </tbody>\r\n                    </table>\r\n                \r\n            </div>\r\n                <br/>\r\n                <Link class=\"btn btn-primary\" to={'/addPatient'} >Add Patient</Link>\r\n        </div>)\r\n    }\r\n}\r\n\r\nclass RowCreater extends React.Component{\r\n    render(){\r\n        var patient = this.props.item;\r\n        return<tr>\r\n                <td>{patient.id}</td>\r\n                <td>{patient.firstName}</td>\r\n                <td>{patient.lastName}</td>\r\n                <td>{patient.age}</td>\r\n                <td> <Link class=\"btn btn-outline-primary\" to={'patientDetails/'+patient.id}>Add Clinical Data</Link> </td>\r\n                <td> <Link class=\"btn btn-outline-secondary\" to={'analyze/'+patient.id}>Analyze Data</Link> </td>                \r\n            </tr>\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport axios from 'axios'\r\nimport { toast } from \"react-toastify\"\r\nimport { Link } from \"react-router-dom\";\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\ntoast.configure();\r\nconst Style = {\r\n    width: '350px'\r\n  };\r\nclass CollectClinicals extends React.Component{\r\n\r\n    state = {}\r\n\r\n    componentDidMount(){\r\n            let id = this.props.match.params.patientId;\r\n            axios.get(\"http://localhost:8080/ClinicalAPI/api/patient/\"+id)\r\n            .then(res=>{\r\n                this.setState(res.data)\r\n            })\r\n    }\r\n\r\n    addClinicalData(event){\r\n        event.preventDefault()\r\n        const Clinical = {\r\n            patientId:this.props.match.params.patientId,\r\n            componentName:this.compoName,\r\n            componentValue:this.compoValue\r\n        }\r\n\r\n        axios.post(\"http://localhost:8080/ClinicalAPI/api/clinical\" , Clinical).then(res=>{\r\n            toast(\"Added Sucssefully\" , {autoClose:3000 , position:toast.POSITION.BOTTOM_CENTER})\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(<div class=\"container\" style={Style}>\r\n                <h3>Patient Details</h3>\r\n                First Name: {this.state.firstName}  <br/>\r\n                Last Name: {this.state.lastName}    <br/>\r\n                Age: {this.state.age}   <br/><br/>\r\n                \r\n                <h3>Clinical Data</h3>\r\n                \r\n                <form>                    \r\n                <select class=\"custom-select\" onChange={(event)=>(this.compoName = event.target.value)}>\r\n                        <option hidden>Select</option>\r\n                        <option value=\"heartrate\">Heart Rate</option>\r\n                        <option value=\"hw\">Height/Weight</option>\r\n                        <option value=\"bp\">Blood Pressure(Sys/Dys)</option>\r\n                    </select>   <br/><br/>\r\n                    <div class=\"form-group\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Enter Selected Value\" name=\"componentValue\" onChange={event=>this.compoValue = event.target.value} /> \r\n                </div>\r\n                <button class=\"btn btn-primary\" onClick={this.addClinicalData.bind(this)}> Add Data </button>\r\n                </form>\r\n                        <br/>\r\n                Click <Link to=\"/\">here</Link> to go back Home...\r\n\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default CollectClinicals;","import React from 'react';\r\nimport axios from 'axios';\r\nimport { toast } from \"react-toastify\"\r\nimport { Link } from \"react-router-dom\";\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nconst divStyle = {\r\n    width: '400px'\r\n  };\r\n\r\ntoast.configure();\r\nclass AddPatient extends React.Component{\r\n\r\n    render(){\r\n        return(<div class=\"container-sm\" style={divStyle}>\r\n            <h3>Enter Patient Details</h3>\r\n            <form>\r\n                <div class=\"form-group\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"First Name\" name=\"firstName\" onChange={(event=>this.fName = event.target.value)} />\r\n                </div>  <br/>\r\n                <div class=\"form-group\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Last Name\" name=\"lastName\" onChange={(event=>this.lName = event.target.value)} />\r\n                </div>  <br/>\r\n                <div class=\"form-group\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"age\" name=\"age\" onChange={(event=>this.pAge = event.target.value)} />\r\n                </div> \r\n                <button class=\"btn btn-primary\" onClick={this.addPatientDetails.bind(this)} >Add Patient</button>\r\n            </form> <br/>\r\n            Click <Link to=\"/\">here</Link> to go back Home...\r\n        </div>)\r\n    }\r\n\r\n    addPatientDetails(event){\r\n            event.preventDefault();\r\n            const data = {\r\n                firstName:this.fName,\r\n                lastName:this.lName,\r\n                age:this.pAge\r\n            }\r\n\r\n            axios.post(\"http://localhost:8080/ClinicalAPI/api/savePatient\" , data).then(res=>{\r\n                \r\n                toast(\"Added Sucssefully\" , {autoClose:3000 , position:toast.POSITION.BOTTOM_CENTER})\r\n            })\r\n            \r\n    }\r\n}\r\n\r\n\r\nexport default AddPatient","import React from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass AnalyzeData extends React.Component{\r\n\r\n    state = {\r\n        clinicalData:[]\r\n    }\r\n\r\n    componentDidMount(){\r\n            let id = this.props.match.params.patientId;\r\n            axios.get(\"http://localhost:8080/ClinicalAPI/api/patient/analize/\"+id)\r\n            .then(res=>{\r\n                this.setState(res.data)\r\n            })\r\n    }\r\n\r\n    render(){\r\n        return(<div>\r\n                 <h3>Patient Details</h3>\r\n               <b> First Name:-</b> {this.state.firstName}  <br/>\r\n               <b> Last Name:</b> {this.state.lastName}    <br/>\r\n               <b>Age:</b> {this.state.age}   <br/><br/>\r\n\r\n                <h3>Patient Clinical Data</h3>\r\n                {this.state.clinicalData.map((eachEntry) => <TableCreater item={eachEntry} patientId={this.state.id} />)}\r\n                \r\n        </div>)\r\n    }\r\n}\r\n\r\nclass TableCreater extends React.Component{\r\n    render(){\r\n        var patientId = this.props.patientId;\r\n        var eachEntry = this.props.item;\r\n\r\n        return(<div class=\"container\">\r\n                    <table class=\"table table-hover\">\r\n                        <tr>\r\n                            <b>{eachEntry.componentName} :- </b>\r\n                            {eachEntry.componentValue}\r\n                        </tr>\r\n                    </table>  \r\n                    <Link class=\"btn btn-primary\" to={'/chart/'+patientId+'/'+eachEntry.componentName}>Analyze Data</Link>                      \r\n            </div>)\r\n            \r\n    }\r\n}\r\n\r\nexport default AnalyzeData;","import React from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport axios from 'axios'\r\n\r\n\r\nclass ChartGenerator extends React.Component{\r\n  \r\n    state = {\r\n      chartData:[],\r\n      labels: ['Blood Pressure', 'Heart Rate', 'Heigth/Weight',\r\n           'BMI'],\r\n  datasets: [\r\n    {\r\n      label: 'Clinical',\r\n      fill: false,\r\n      lineTension: 0.5,\r\n      backgroundColor: 'rgba(75,192,192,1)',\r\n      borderColor: 'rgba(0,0,0,1)',\r\n      borderWidth: 2,\r\n      data: [65, 59, 80, 71]\r\n    }\r\n  ]\r\n  }\r\n\r\n  componentDidMount(){\r\n    let id = this.props.match.params.patientId;\r\n    let compoName = this.props.match.params.componentName;\r\n    axios.get(\"http://localhost:8080/ClinicalAPI/api/clincal/\"+id+'/'+compoName)\r\n    .then(res=>{    \r\n        this.setState(res.data)\r\n      })\r\n  }\r\n    render(){\r\n        return(<div>\r\n                <Line\r\n                data={this.state}\r\n                options={{\r\n                          title:{\r\n                                display:true,\r\n                                text:'Patient Clinical Data',\r\n                                fontSize:20\r\n                              },\r\n                          legend:{\r\n                                  display:true,\r\n                                  position:'right'\r\n                                }\r\n                          }} />\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default ChartGenerator;","import React from 'react';\nimport './App.css';\nimport { Switch,Route } from \"react-router-dom\";\nimport Home from './Components/Home';\nimport CollectClinicals from './Components/CollectClinicals';\nimport AddPatient from './Components/AddPatient';\nimport AnalyzeData from './Components/AnalyzeData';\nimport ChartGenerator from './Components/ChartGenerator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/patientDetails/:patientId\" component={CollectClinicals} />\n        <Route exact path=\"/addPatient\" component={AddPatient} />\n        <Route exact path=\"/analyze/:patientId\" component={AnalyzeData} />\n        <Route exact path=\"/chart/:patientId/:componentName\" component={ChartGenerator} />\n      </Switch>\n        \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  \n  \n    <HashRouter>\n    <App />\n    </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}